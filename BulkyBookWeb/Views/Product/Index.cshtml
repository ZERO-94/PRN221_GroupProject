@model PaginationViewModel<Product>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
	ViewData["Title"] = "Index";
}

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
<div class="product-index">
        <h1 style="color:black; text-shadow: none">Product Management</h1>
    <div class="d-flex justify-content-between align-items-center">
        <form class="d-flex my-2 w-50"
            asp-action="Index" method="get">
            <input class="form-control me-sm-2" type="search" name="search" placeholder="Search" value="@ViewBag.SearchTerm">
            <button class="btn btn-secondary my-sm-0" type="submit">Search</button>
        </form>
        <p class="mb-0">
        <a class="h-full btn" asp-action="Upsert">Create New</a>
        </p>
    </div>
    
    
    
        <table class="table table-hover table-striped mt-3">
        <thead class="my-4">
            <tr>
                <th>
                    Image
                </th>
                <th>
                    Title
                </th>
                <th>
                    ISBN
                </th>
                <th>
                    Author
                </th>
                <th>
                    Price
                </th>
                <th>
                    Category
                </th>
                <th>
                    CoverType
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @if (item.ImageUrl != null)
                        {
                            <img style="border-radius: 50%" src="@item.ImageUrl" width="40" height="40" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ISBN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CoverType.Name)
                    </td>
                    <td>
						<div class="admin-action-btns">
                            <a class="edit-btn text-white" asp-action="Upsert" asp-route-id="@item.Id">Edit</a> |
                            <a class="delete-btn text-white" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
						</div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @for(var i = 1; i <= Model.TotalPage; i++) {
                    <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@i">@i</a> </li>
            }
        </ul>
    </nav>
</div>
}
else
{

    
<div class="container ">
        <h1>Products</h1>
        <div class="d-flex justify-content-between align-items-center product-index">


                <form class="d-flex my-2 w-75"
                  asp-action="Index" method="get">
                    <input class="form-control me-sm-3" type="search" name="search" placeholder="Search" value="@ViewBag.SearchTerm">
                <select name="category" class="form-control me-sm-2" asp-items="@ViewBag.CategoryList">
                        <option disabled selected>--Select category--</option>
                    </select>
                    <button class="btn btn-secondary my-sm-0" type="submit">Search</button>
                </form>

            
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    @for (var i = 1; i <= Model.TotalPage; i++)
                    {
                        <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@i">@i</a> </li>
                    }
                </ul>
            </nav>
        </div>
        <div class="row justify-content-start mt-4">
		@foreach (var product in Model.Data)
		{
			<div class="col-md-3 mb-5">
				<div class="card h-100">
                    <div class="w-100 overflow-hidden" style="height:300px !important;">
					    <img src="@product.ImageUrl" class="card-img-top " alt="@product.Title">
                    </div>
					<div class="card-body d-flex flex-column justify-content-between">
                        
						<h5 class="card-title">@product.Title</h5>
                        <div>
                        <p class="card-text text-truncate">@product.Description</p>
                        <div class="d-flex justify-content-between">
                            <p class="card-text">$@product.Price</p>
                            <div class="d-flex justify-content-around gap-2">
                            <form asp-controller="ShoppingCart" asp-action="Add" method="post">
                                <input name="productId" type="hidden" value="@product.Id" />
                                <input name="amount" type="hidden" value="1" />
                                <button class="btn btn-success h-100" type="submit" value="Add">Add</button>
                            </form>
                            <a class="btn btn-dark" asp-controller="Product" asp-action="GetDetail" asp-route-id="@product.Id" asp>View</a>
                            </div>
                        </div>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
</div>
}
