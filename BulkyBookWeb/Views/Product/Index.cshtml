@model IEnumerable<Product>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<div class="product-index">
    <h1 style="color:black">Product Management</h1>

    <p>
        <a asp-action="Upsert">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ISBN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageUrl)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CoverType)
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ISBN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @if (item.ImageUrl != null)
                        {
                            <img src="@item.ImageUrl" width="100" height="100" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CoverType.Name)
                    </td>
                    <td>
                        @if (@SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <div class="admin-action-btns">
                                <a asp-action="Upsert" asp-route-id="@item.Id">Edit</a> |
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </div>
                        }
                        else
                        {
                            <form asp-controller="ShoppingCart" asp-action="Add" method="post">
                                <input name="productId" type="hidden" value="@item.Id" />
                                <input name="amount" type="hidden" value="1" />
                                <button class="btn btn-success" type="submit" value="Add" />
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

