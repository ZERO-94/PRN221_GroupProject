@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity

@model IEnumerable<CartProduct>

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between">
    <h1>Shopping Cart</h1>
    <div class="d-flex align-items-center">
        <a class="edit-btn btn py-2 align-items-center" asp-controller="Product" asp-action="Index">Continue shopping</a>
    </div>
</div>

@if(@Model != null) {
<table class="table table-striped mt-4">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Title
            </th>
                <th>
                    Price
                </th>
            <th>
                Total
            </th>
            
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Title)
                </td>
                    <td>@Html.DisplayFor(modelItem => item.Product.Price)</td>
                <td class="col-3">
                        <form asp-controller="ShoppingCart" asp-action="Update" method="post" class="" style="width:fit-content;">
                            <input class="form-control w-25 d-inline-block" name="productId" type="hidden" value="@item.Id" />
                            <input class="form-control w-25 d-inline-block" name="amount" type="number" value="@item.Total" />
                            <button class="btn btn-success d-inline-block" type="submit" value="Update">Update</button>
                        </form>
                </td>
                <td class="col-2">
                                
                        <form asp-controller="ShoppingCart" asp-action="Update" method="post">
                            <input name="productId" type="hidden" value="@item.Id" />
                            <input name="amount" type="hidden" value="0" />
                            <button class="btn btn-danger" type="submit" value="Remove">Remove</button>
                        </form>
                </td>
            </tr>
        }
    </tbody>
</table>
    <div class="d-flex justify-content-between mt-4">
        <div>
            <h4>
                Cart total: @Model.Aggregate(0D, (total, next) => total + next.Product.Price * next.Total)
            </h4>
        </div>
            
        <div class="d-flex align-items-center">
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Customer"))
            {
                <a class="edit-btn btn py-2 align-items-center" href="/Order/Create">Proceed to Checkout</a>
            } else
            {
                <span>Please sign in before checkout</span>
            }
        </div>
    </div>
    


} else {
    <p>Please start buying thing!</p>
}
